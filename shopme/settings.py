"""
Django settings for shopme project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
from decouple import config
import os
# import accounts


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent

SECRET_KEY = config('SECRET_KEY')

DEBUG = True

AUTHENTICATION_BACKENDS = (
    # 'django.contrib.auth.backends.AllowAllUsersModelBackend',
    # 'account.backends.CaseInsensitiveModelBackend', #using this will say no module named account
    'django.contrib.auth.backends.ModelBackend',
    # "allauth.account.auth_backends.AuthenticationBackend" #without this the credential is invalid when creating api key
    )

INSTALLED_APPS = [
    'channels',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'category',
    'accounts',
    'store',
    'carts',
    'orders',
    'django.contrib.humanize',
    'admin_honeypot',
    'currencies',
    'django_filters',
    'storages',
    'chatapp',
    'customer',
    'notification',
    'templatetags',
    'rest_framework',
    'rest_framework.authtoken',


]

WSGI_APPLICATION = 'shopme.wsgi.application'
ASGI_APPLICATION = 'shopme.routing.application'

MIDDLEWARE = [

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.common.BrokenLinkEmailsMiddleware',
]

# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# SECURE_SSL_REDIRECT = True
# SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# SECURE_HSTS_SECONDS = 1800
# SECURE_HSTS_PRELOAD =True

ROOT_URLCONF = 'shopme.urls'

# DEFAULT_EXCEPTION_REPORTER = 'error_500_page/'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        # 'APP_DIRS': True, #remove this because app_dirs must be set error is raised upn adding the loaders=(django.template.loaders.app_directories.Loader) :similar
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'category.context_processors.menu_links',
                'carts.context_processors.counter',
                'currencies.context_processors.currencies',
                'carts.context_processors.country_cur',
            ],
            'loaders':[
                ('django.template.loaders.cached.Loader', [
                    'django.template.loaders.filesystem.Loader',
                    'django.template.loaders.app_directories.Loader',
                    ]),
            ],
            'libraries': {
                'filter_tags': 'templatetags.filter_tags',
           }
        },
    },
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'rest_framework.authentication.BasicAuthentication', #when this is used the username and passwords becomes invalid when making transction with api
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',

    ],
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
        # 'rest_framework.permissions.IsAdminUser',
        # 'rest_framework.permissions.DjangoModelPermissions',
    ],
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    # 'PAGE_SIZE': 10,
     'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 10,
}

# REST_FRAMEWORK = {
#     'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
#     'PAGE_SIZE': 10
# }

# REST_FRAMEWORK = {
#    'DEFAULT_AUTHENTICATION_CLASSES': (
#        'rest_framework.authentication.TokenAuthentication',
#    ),
   # 'DEFAULT_PERMISSION_CLASSES': (
   #      'rest_framework.permissions.IsAdminUser'
   # ),
# }

# TEMPLATE_LOADERS = (
#     'django.template.loaders.filesystem.Loader',
#     'django.template.loaders.app_directories.Loader',
#     'django.template.loaders.eggs.Loader',
# )
#
# STATICFILES_FINDERS = (
#    'django.contrib.staticfiles.finders.FileSystemFinder',
#    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#    'dajaxice.finders.DajaxiceFinder',
# )
# DAJAXICE_MEDIA_PREFIX = 'dajaxice'



# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

# chat also works using this. Meaning it is not databse dependent
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# DB_NAME = "chshop_prod_db"
# DB_USER = "chshop_prod_user"
# DB_PASSWORD = "chshop_prod_123!"
# DATABASES = {
#     'default': {
#         # 'ENGINE': 'django.db.backends.postgresql',
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': DB_NAME,
#         'USER': DB_USER,
#         'PASSWORD': DB_PASSWORD,
#         'HOST': 'localhost',
#         'PORT': '5432',  #port for postgres
#         'TEST': {
#             'NAME': 'chshopprodtestdatabase',
#         },
#         'DISABLE_SERVER_SIDE_CURSORS': True,
#     }
# }

DB_NAME = "chshop_db"
DB_USER = "chshop_user"
DB_PASSWORD = "chshop_123!"
DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.postgresql',
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': DB_NAME,
        # 'TEST_NAME' : 'test_chshop_db',
        'USER': DB_USER,
        'PASSWORD': DB_PASSWORD,
        'HOST': 'localhost',
        'PORT': '5432',  #port for postgres
        # 'TEST': {
        #     'NAME': 'chshopprodtestdatabase',
        # },
        'DISABLE_SERVER_SIDE_CURSORS': True,
    }
}

#tell that we are using custom user usermodels
AUTH_USER_MODEL = "accounts.Account"

# FOR PRODUCTION USE
# CHANNEL_LAYERS = {
#     'default': {
#         'BACKEND': 'channels_redis.core.RedisChannelLayer',
#         'CONFIG': {
#             "hosts": [('redis-server-name', 6379)],
#         },
#     },
# }

# for developement use
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer"
    }
}

# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
#     }
# }
# CACHES = {
#    'default': {
#       'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
#       'LOCATION': 'my_cache_table',
#    }
# }

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

ALLOWED_HOSTS = ['*']

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static') #this will be attached in the template tag {% static %}
STATICFILES_DIRS = [
        os.path.join(BASE_DIR, 'shopme/static_local'),
        os.path.join(BASE_DIR, 'media'),

        ] #save here
MEDIA_URL = '/media/' #this will show
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') #save here
TEMP = os.path.join(BASE_DIR, 'temp')
DATA_UPLOAD_MAX_MEMORY_SIZE = 10485760 # 10mb = 10 * 1024 *1024

# SMTP configuration for gmail
EMAIL_HOST =  config('EMAIL_HOST')
EMAIL_PORT = config('EMAIL_PORT', cast=int)
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
EMAIL_USE_TLS = config('EMAIL_USE_TLS', cast=bool)

CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'formatters': {
        'django.server': {
            '()': 'django.utils.log.ServerFormatter',
            'format': '[{server_time}] {message}',
            'style': '{',
        }
    },
    'handlers': {
        # 'file':{
        #     'class': 'logging.FileHandler',
        #     'filename': config('jvlog'),
        #     'level': 'DEBUG',
        # },
        'console': {
            'level': 'INFO',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
        },
        'django.server': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'django.server',
        },
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'mail_admins'],
            'level': 'INFO',
        },
        'django.server': {
            'handlers': ['django.server'],
            'level': 'INFO',
            'propagate': False,
        },
        # 'django.request': {
        #     'handlers': ['file'],
        #     'level': 'DEBUG',
        #     'propagate': False,
        # },

    }
}


#MANAGERS AND ADMINS MUST FOLLOW LOGGING
ADMINS = [
    ('error_note', config('EMAIL_HOST_USER')),
]
MANAGERS = [
    ('error_note', config('EMAIL_HOST_USER')),
]

BASE_URL = "http://127.0.0.1:8000"
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
